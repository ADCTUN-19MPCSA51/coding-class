//    https://leetcode.com/problems/implement-stack-using-queues/submissions/

class MyStack {
Queue<Integer>q1;
    /** Initialize your data structure here. */
    public MyStack() {
     q1=new LinkedList<Integer>();   
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
       q1.add(x); 
        rotatequeue();
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
     return q1.poll();   
    }
    
    /** Get the top element. */
    public int top() {
     return q1.peek();   
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
    return q1.isEmpty();    
    }
    public void rotatequeue()
    {
        int s=q1.size();
        int i=1;
        while(i<s){
            q1.add(q1.poll());
            i+=1;
        }
    }
}

/*
Your input
["MyStack","push","push","top","pop","empty"]
[[],[1],[2],[],[],[]]
Output
[null,null,null,2,2,false]
Expected
[null,null,null,2,2,false]
*/
